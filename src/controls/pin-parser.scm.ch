// This file was generated by fch.
// To submit a bug report or add a language module, go to:
// <https://github.com/llllllllll/fch>
#ifndef ROV_PIN_PARSER_H
#define ROV_PIN_PARSER_H
const char* const pin_parser_str = "#| pin-parser.scm --- Parser of the pin-parser.scm\n   Copyright (c) Joe Jevnik\n\n   This program is free software; you can redistribute it and/or modify it\n   under the terms of the GNU General Public License as published by the Free\n   Software Foundation; either version 3 of the License, or (at your option)\n   any later version.\n\n   This program is distributed in the hope that it will be useful, but WITHOUT\n   ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n   FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n   more details.\n\n   You should have received a copy of the GNU General Public License along with\n   this program; if not, write to the Free Software Foundation, Inc., 51\n   Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA. |#\n\n;; Lazily folds a function over list.\n;; f -- the function to fold.\n;; ns -- the list to fold over.\n(define (list-and f ns)\n  (cond\n   ((null? ns) #t)\n   ((f (car ns)) (list-and f (cdr ns)))\n   (else #f)))\n\n;; Defines a new operation-pin pair.\n(define-syntax gen-pin\n  (syntax-rules ()\n    ((gen-pin name)\n     (define (name ps)\n       (if (list-and (lambda (p) (or (> p 54) (< p 0))) ps)\n           'name\n           `(,(symbol->string 'name) . ,ps))))))\n\n(gen-pin lasers)\n(gen-pin headlights)\n(gen-pin sidelights)\n(gen-pin claw-grip)\n(gen-pin left-motor)\n(gen-pin left-motor-direction)\n(gen-pin left-motor-ssg)\n(gen-pin right-motor)\n(gen-pin right-motor-direction)\n(gen-pin right-motor-ssg)\n(gen-pin front-motor)\n(gen-pin front-motor-direction)\n(gen-pin front-motor-ssg)\n(gen-pin back-motor)\n(gen-pin back-motor-direction)\n(gen-pin back-motor-ssg)\n";
const size_t pin_parser_len = 1647;
#endif
